


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Sudoku, CODE, READONLY
    2 00000000                 EXPORT           start
    3 00000000         
    4 00000000         start
    5 00000000         
    6 00000000 E59F4064        LDR              R4, =gridOne
    7 00000004         
    8 00000004         ;
    9 00000004         ; write tests for getSquare subroutine
   10 00000004         ;get the value of an item stored at (7,2) on the grid
   11 00000004 E1A03004        MOV              R3, R4      ;gridOneArray = gri
                                                            dOne
   12 00000008 E3A01006        MOV              R1, #6
   13 0000000C E3A02001        MOV              R2, #1
   14 00000010 EB000009        BL               getSquare
   15 00000014         ;subroutine tested to be working
   16 00000014         
   17 00000014         ;
   18 00000014         ; write tests for setSquare subroutine
   19 00000014         
   20 00000014         ;NOTE SHOULD THIS SUBROUTINE ONLY MAKE CHANGES TO EMPTY 
                       SQUARES?
   21 00000014         ;Set the value of a blank square(3,3) to 6
   22 00000014 E3A00002        MOV              R0, #2
   23 00000018 E1A03004        MOV              R3, R4
   24 0000001C E3A01003        MOV              R1, #3
   25 00000020 E3A02003        MOV              R2, #3
   26 00000024 EB00000A        BL               setSquare
   27 00000028         
   28 00000028 E1A03004        MOV              R3, R4      ;gridOneArray = gri
                                                            dOne
   29 0000002C E3A01003        MOV              R1, #3
   30 00000030 E3A02003        MOV              R2, #3
   31 00000034 EB000000        BL               getSquare
   32 00000038         
   33 00000038         ;
   34 00000038         ; write tests for isValid subroutine
   35 00000038         ;
   36 00000038         
   37 00000038         ;
   38 00000038         ; write tests for sudoku subroutine
   39 00000038         ;
   40 00000038         
   41 00000038         
   42 00000038 EAFFFFFE 
                       stop    B                stop
   43 0000003C         
   44 0000003C         
   45 0000003C         
   46 0000003C         ; getSquare subroutine
   47 0000003C         ;
   48 0000003C         ;A subroutine to get the value of a digit within a speci
                       fic column and row in the grid
   49 0000003C         ;Parameters:
   50 0000003C         ; - R1 : Column number
   51 0000003C         ; - R2 : Row number
   52 0000003C         ; - R3 : gridOne Array
   53 0000003C         ;
   54 0000003C         ;Return Value:



ARM Macro Assembler    Page 2 


   55 0000003C         ; - R0 : the digit value within the square
   56 0000003C         getSquare
   57 0000003C         
   58 0000003C         
   59 0000003C E92D4060        STMFD            sp!, {R5-R6,lr} ;//store the va
                                                            riable values on th
                                                            e stack
   60 00000040         
   61 00000040 E3A06009        MOV              R6, #9      ;rowSize = 9
   62 00000044 E0050692        MUL              R5, R2, R6  ;columnPosition = c
                                                            olumnNumber * rowSi
                                                            ze (find the positi
                                                            on of the first ite
                                                            m in the array at t
                                                            he defined column
   63 00000048 E0855003        ADD              R5, R5, R3
   64 0000004C E7D50001        LDRB             R0, [R5, R1] ;return gridOne[ro
                                                            wNumber, columnNumb
                                                            er]    
   65 00000050         
   66 00000050 E8BD8060        LDMFD            sp!, {R5-R6,pc}
   67 00000054         
   68 00000054         
   69 00000054         
   70 00000054         
   71 00000054         ; setSquare subroutine
   72 00000054         ;
   73 00000054         ;A subroutine to set the value of a square within the su
                       duko grid
   74 00000054         ;parmeters :
   75 00000054         ; R0 : value to be set
   76 00000054         ; R1 : column to set
   77 00000054         ; R2 : row to set
   78 00000054         ; R3 : gridOne Array Location
   79 00000054         ;
   80 00000054         ;return Value - void
   81 00000054         setSquare
   82 00000054 E92D4060        STMFD            sp!, {R5-R6,lr} ;save variables
                                                             to the stack
   83 00000058         
   84 00000058         ;get the value to set in the array
   85 00000058 E3A06009        MOV              R6, #9      ;rowSize = 9
   86 0000005C E0050692        MUL              R5, R2, R6  ;columnPosition = c
                                                            olumnNumber * rowSi
                                                            ze (find the positi
                                                            on of the first ite
                                                            m in the array at t
                                                            he defined column
   87 00000060 E0855003        ADD              R5, R5, R3  ;address = gridOne 
                                                            + indexPosition
   88 00000064 E7C50001        STRB             R0, [R5, R1] ;gridOneArray[colN
                                                            umber][rowNumber] =
                                                             changeValue;
   89 00000068         
   90 00000068 E8BD8060        LDMFD            sp!, {R5-R6,pc} ;save methods t
                                                            o the stack
   91 0000006C         
   92 0000006C         
   93 0000006C         ; isValid subroutine



ARM Macro Assembler    Page 3 


   94 0000006C         isValid
   95 0000006C         
   96 0000006C         
   97 0000006C         
   98 0000006C         ; sudoku subroutine
   99 0000006C         sudoku
  100 0000006C         
  101 0000006C         
  102 0000006C         
  103 0000006C 00000000        AREA             Grids, DATA, READWRITE
  104 00000000         
  105 00000000         gridOne
  106 00000000 07 09 00 
              00 00 00 
              03 00 00         DCB              7,9,0,0,0,0,3,0,0
  107 00000009 00 00 00 
              00 00 06 
              09 00 00         DCB              0,0,0,0,0,6,9,0,0
  108 00000012 08 00 00 
              00 03 00 
              00 07 06         DCB              8,0,0,0,3,0,0,7,6
  109 0000001B 00 00 00 
              00 00 05 
              00 00 02         DCB              0,0,0,0,0,5,0,0,2
  110 00000024 00 00 05 
              04 01 08 
              07 00 00         DCB              0,0,5,4,1,8,7,0,0
  111 0000002D 04 00 00 
              07 00 00 
              00 00 00         DCB              4,0,0,7,0,0,0,0,0
  112 00000036 06 01 00 
              00 09 00 
              00 00 08         DCB              6,1,0,0,9,0,0,0,8
  113 0000003F 00 00 02 
              03 00 00 
              00 00 00         DCB              0,0,2,3,0,0,0,0,0
  114 00000048 00 00 09 
              00 00 00 
              00 05 04         DCB              0,0,9,0,0,0,0,5,4
  115 00000051         
  116 00000051                 END
Command Line: --debug --xref --apcs=interwork --depend=.\sudoku.d -o.\sudoku.o 
-IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips --
predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="NO_CLOCK
_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA 1
" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\sudoku.lst 
Sudoku.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Sudoku 00000000

Symbol: Sudoku
   Definitions
      At line 1 in file Sudoku.s
   Uses
      None
Comment: Sudoku unused
getSquare 0000003C

Symbol: getSquare
   Definitions
      At line 56 in file Sudoku.s
   Uses
      At line 14 in file Sudoku.s
      At line 31 in file Sudoku.s

isValid 0000006C

Symbol: isValid
   Definitions
      At line 94 in file Sudoku.s
   Uses
      None
Comment: isValid unused
setSquare 00000054

Symbol: setSquare
   Definitions
      At line 81 in file Sudoku.s
   Uses
      At line 26 in file Sudoku.s
Comment: setSquare used once
start 00000000

Symbol: start
   Definitions
      At line 4 in file Sudoku.s
   Uses
      At line 2 in file Sudoku.s
Comment: start used once
stop 00000038

Symbol: stop
   Definitions
      At line 42 in file Sudoku.s
   Uses
      At line 42 in file Sudoku.s
Comment: stop used once
sudoku 0000006C

Symbol: sudoku
   Definitions
      At line 99 in file Sudoku.s
   Uses
      None
Comment: sudoku unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Grids 00000000

Symbol: Grids
   Definitions
      At line 103 in file Sudoku.s
   Uses
      None
Comment: Grids unused
gridOne 00000000

Symbol: gridOne
   Definitions
      At line 105 in file Sudoku.s
   Uses
      At line 6 in file Sudoku.s
Comment: gridOne used once
2 symbols
348 symbols in table
